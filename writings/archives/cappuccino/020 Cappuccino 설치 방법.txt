Cappuccino 설치 방법
drypot 2011-08-09 17:59

Cappuccino 설치 방법 3 번째 버전. =,=

Cappuccino 가 웹 위젯 프레임웍만 제공하는 것이 아니고
Objective-J 컴파일러와 코멘드라인 자바스크립트 실행환경 narwhal 도 같이 제공하기 때문에 개발 환경이 복잡하고
개념이 깔끔하게 정리되어 있지도 않아서 설치 절차가 좀 복잡합니다.
여기에 미묘하게 문서 설명이 부족해서 처음 대할 때 이해하기도 좀 어렵습니다.

상식같아서는 narwhal 을 설치한 후, OBJJ 를 설치하고, 다음에 Cappuccino 를 설치해야할 것 같은데,
narwhal github 에는 narwhal 설치 스크립트가 없고, narwhal 설치 기능이 Cappuccino 패키지에 들어있습니다.
OBJJ 도 Cappuccino 와 아직 분리 되어 있지 않은 생태이고요.
이런 식으로 개념과 절차가 먼가 꼬여 있습니다.

http://cappuccino.org 에서 Starter Package 를 배포하는데 계속 개발중인 상태라 구성물이 계속 바뀌기도 하고
Starter Package 를 쓰면 구조상 업그레이드에 맞추어 프레임웍을 교체하는 것도 어려워지는 문제가 발생합니다.
그래서 가장 간단해 보이는 방법을 따르면 별로 결과가 좋지 않습니다. =,=

현재로서는 github 에서 Cappuccino 소스 패키지를 받아서 여기 따라오는
스크립트로 괴상한 절차에 따라 관련 도구들을 설치하는 방법이 최선인 것 같습니다.

관련 위키는
https://github.com/280north/cappuccino/wiki/getting-and-building-the-source

아래 과정에서 생성할 폴더들은 다음과 같습니다.
빌드 과정에 생성되는 폴더 구조들은 Xcode 문화를 따르는 것 같습니다.

~/cappuccino: Cappuccino github 소스를 받을 겁니다. 내용물은 OBJJ 와 AppKit, Foundation 소스 코드들.
~/cappuccino-build: Obj-J 로 만들어진 AppKit, Foundation 프레임웍 부분을 컴파일해서 여기에 넣을겁니다.
/usr/local/narwhal: 설치 과정에서 narwhal 자바스크립트 환경이 여기 만들어집니다. 관련 패키지들도 함께 이곳에.

cd <-- 홈 디렉토리로 이동
git clone git://github.com/280north/cappuccino.git cappuccino <-- github 에서 소스 다운로드

cd cappuccino
./bootstrap.sh <-- 이 스크립트가 narwhal 을 설치해 줍니다. 맥이라면 JavaScriptCore 어뎁터도 같이 설치하시길 권장합니다.

설명에 따르면 bootstrap.sh 에서 narwhal 뿐만 아니라 Cappuccino 빌드에 필요한 도구들도 설치되어야 하는데 제 경우에는 설치가 안 되더군요.
tusk list 해보셔서 jake, browserjs, shrinksafe 등의 패키지가 설치되어 있지 않으면 설치해야 합니다.
tusk 는 narwhal 에서 사용하는 패키지 메니저입니다.

tusk install jake
tusk install browserjs
tusk install shrinksafe

도구들은 설치되었는데 narwhal 관련 PATH 설정을 해두어야 합니다.
.profile 이나 본인이 사용하는 쉘 초기화 스크립트에 아래 내용을 추가합니다.

export PATH="$PATH:/usr/local/narwhal/bin"
export CAPP_BUILD=$HOME/cappuccino-build

CAPP_BUILD 는 Cappuccino 의 JS 파일들과 리소스를 출력할 디렉토리입니다.
Cappuccino 의 프레임웍 부분은 Obj-J 상태로 오기 때문에 JS 로 컴파일해야 합니다.
png 등 바이너리 파일들도 텍스트 인코딩되어 CAPP_BUILD 에 들어갑니다.

Cappuccino 어플리케이션 생성은 capp 명령으로 하는데
프레임웍 코드와 리소스를 어플리케이션 마다 복사하는 대신에 CAPP_BUILD 의 심볼릭 링크를 대신 심을 수 있습니다.
그러니 CAPP_BUILD 를 정의해 두면 추후 카푸치노를 업그레이드하더라도 어플리케이션 폴더들을 업그레이드할 필요가 없어집니다.

.profile 을 수정하셨으면 새로운 쉘을 여셔서 환경 변수를 초기화 해주시고.

다시 git 로 받았던 cappuccino 소스 디렉토리로 이동합니다.
여기서 아래 명령으로 Cappuccino 를 컴파일 합니다.
jake 는 280north 에서 JS 로 만든 빌드툴입니다.

jake install

~/cappuccino-build 에 프레임웍 JS 파일들과 텍스트 인코딩된 리소스들이 박히고,
/usr/local/narwhal/bin 에는 관련 도구들이 들어갑니다.

임시 디렉토리로 이동하셔서 아래 명령을 내리시면 첫 Cappuccino 어플리케이션을 생성하실 수 있습니다.
-l 옵션은 프레임웍 파일들을 어플리케이션 폴더에 복사해 넣지 않고 CAPP_BUILD 디렉토리로의 심볼릭 링크를 사용하게 합니다.

capp gen -l MyApp

MyApp 폴더 안에 생성된 index.html 을 브라우저로 로딩해 봅니다.
단 퍼미션 문제 때문에 현재 크롬은 안 됩니다.